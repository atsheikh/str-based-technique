#########################################################################################
# Description: 	This file generates fault statistics from the faults					#
#			   	file generated by HOPE for a given benchmark. The						#
#				output is a new bench file consisting of Quaded and Duplicated logic	#
#																						#
# USAGE: perl circuit-stats.pl [Faults File] [Error Threshold]							#
#		[Faults File] = log file generated by HOPE.										#
#		[Error Threshold] =  reports only errors >= Threshold.							#
# 																						#
# Author: Ahmad Tariq Sheikh.															#
#																						#
# Date: October 26, 2013																#
#																						#
#########################################################################################

#!/usr/bin/perl -w

use warnings;
use Cwd;
use Time::HiRes;
#---------------------

sub readBenchFile {
	
	$benchFile = "$inputFile.bench";
	open (INPUT_FILE, $benchFile) or die $!;
				
	while(<INPUT_FILE>) {		
		if ($_ =~ m/=/) {			
			
			my @gateList = ($_ =~ m/(\w+)/g);				
			$gateName = $gateList[1];			
			@gateList = ($gateList[0], @gateList[2..$#gateList]);
			
			$gatesCount += 1;

			if ($gateName eq "DNAND" or $gateName eq "DNOR" or $gateName eq "DNOT") {
				$FP += 1;
			}
			if ($gateName eq "NAND" or $gateName eq "NOR" or $gateName eq "NOT") {
				$NP += 1;
			}
			elsif ($gateName eq "NAND21" or $gateName eq "NAND31" or $gateName eq "NAND41" 
				or $gateName eq "NOR21" or $gateName eq "NOR31" or $gateName eq "NOR41"
				or $gateName eq "NOT11" or $gateName eq "NOT12") {
				
				$T1 += 1;
			}			
		}
	}	
	close(INPUT_FILE);	
	
	
	# print "Total Gates: $gatesCount\n";
	# print "1T: $T1\n";
	# print "FP: $FP\n";
	print "NP: $NP\n";

}
#######################################################

$cwd = getcwd; #get Current Working Directory
$inputFile = $ARGV[0]; #faults file generated by HOPE

$gatesCount = 0;
$FP = 0;
$T1 = 0;
$NP = 0;

readBenchFile();
